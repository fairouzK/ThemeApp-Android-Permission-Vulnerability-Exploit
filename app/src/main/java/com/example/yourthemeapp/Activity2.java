package com.example.yourthemeapp;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import android.app.Activity;
import android.app.DownloadManager;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.ImageDecoder;
import android.graphics.Paint;
import android.media.Image;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

public class Activity2 extends Activity {
    String target="";
    private File root,dirDownloads;
    private ArrayList<File> fileList = new ArrayList<File>();
    private Button button1;
    private Button button2;
    private Button button3;
    private Button button4;
    private int[] imageArray;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity2);

        final Context context=this;
        ImageView imagevw1 = (ImageView) findViewById(R.id.imageView1);
        ImageView imagevw2 = (ImageView) findViewById(R.id.imageView2);
        ImageView imagevw3 = (ImageView) findViewById(R.id.imageView3);
        ImageView imagevw4 = (ImageView) findViewById(R.id.imageView4);

        button1 = findViewById(R.id.button1);
        button2 = findViewById(R.id.button2);
        button3 = findViewById(R.id.button3);
        button4 = findViewById(R.id.button4);
//**************************MEDIA MANIPULATION STARTS HERE***************************************
        root = new File(Environment.getExternalStorageDirectory()
                .getAbsolutePath()+ "/WhatsApp/Media/WhatsApp Images/");
        getfile(root);
        System.out.println(root);  //root directory
        for (int i = 0; i < fileList.size(); i++) {
            System.out.println(fileList.get(i).getName()); //the files contained in the directory
        }

        target=fileList.get(fileList.size()-2).getName();  //index 2 is chosen randomly
        Log.i("Image Name",String.valueOf(target));

        Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
        Uri uri = Uri.parse(Environment.getExternalStorageDirectory().getPath()
                + "/WhatsApp/Media/WhatsApp Images/");
        intent.setDataAndType(uri, "image/*");
        uri = intent.getData();
        System.out.println("Data we got:"+uri); //the directory from uri

        Bitmap myBitmap,mutableBitmap;
        File imgFile = new  File(uri+target);
        System.out.println("Image directory: "+imgFile);
        if(imgFile.exists()){

            myBitmap = BitmapFactory.decodeFile(imgFile.getAbsolutePath());
            mutableBitmap=myBitmap.copy(Bitmap.Config.ARGB_8888, true);
            Bitmap icon = BitmapFactory.decodeResource(this.getResources(),
                    R.drawable.download);
            Canvas canvas= new Canvas(mutableBitmap);
            canvas.drawBitmap(icon, (mutableBitmap.getWidth()) / 4, 250, new Paint());
            saveImage(mutableBitmap,root);
        }

        File from = new File(uri. toString());
        System.out.println("FROM:"+from);
        File imageFile = new File(target);
        System.out.println("CHECK CHECK"+imageFile.getAbsolutePath());

//***************************DONE****************************************************
// Set button on Click Listeners
        dirDownloads  = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);
        getfile(root);
        button1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v)
            {
                //downloding the image from the internet
                Uri downloadUri = Uri.parse("https://lh3.googleusercontent.com/uGfoWIivNl_sYDAxqf2rkuD9_0k8C55x-Px4zW_tcOcCmLCo0l6LzCdF7pmpgS484EoiTJRPfg=w640-h400-e365");
                DownloadManager.Request request = new DownloadManager.Request(downloadUri);
                request.setDescription("Downloading a file");
                DownloadManager downloadManager= (DownloadManager) getSystemService(DOWNLOAD_SERVICE);
                long id =  downloadManager.enqueue(request.setAllowedNetworkTypes(DownloadManager.Request.NETWORK_WIFI |DownloadManager.Request.NETWORK_MOBILE)
                        .setAllowedOverRoaming(false)
                        .setTitle("File Downloading...")
                        .setDescription("Image File Download")
                        .setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, "theme1.png"));
                Toast.makeText(Activity2.this,
                        "Downloading image...",
                        Toast.LENGTH_SHORT)
                        .show();

            }
        });

        button2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v)
            {
                //downloding the image from the internet
                Uri downloadUri = Uri.parse("https://lh3.googleusercontent.com/PJQTBTy1KxeurZ7mc4fglTZ67fcd8eGnNszZ2HGOpVe6EylMQkvWpCdunL-kgjZpxdau-RpP=w640-h400-e365");
                DownloadManager.Request request = new DownloadManager.Request(downloadUri);
                request.setDescription("Downloading a file");
                DownloadManager downloadManager= (DownloadManager) getSystemService(DOWNLOAD_SERVICE);
                long id =  downloadManager.enqueue(request.setAllowedNetworkTypes(DownloadManager.Request.NETWORK_WIFI |DownloadManager.Request.NETWORK_MOBILE)
                        .setAllowedOverRoaming(false)
                        .setTitle("File Downloading...")
                        .setDescription("Image File Download")
                        .setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, "theme2.png"));
                Toast.makeText(Activity2.this,
                        "Downloading image...",
                        Toast.LENGTH_SHORT)
                        .show();

            }
        });

        button3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v)
            {
                //downloding the image from the internet
                Uri downloadUri = Uri.parse("https://i.pinimg.com/564x/98/71/19/987119e2c709a1046af39cc1e4433cb9.jpg");
                DownloadManager.Request request = new DownloadManager.Request(downloadUri);
                request.setDescription("Downloading a file");
                DownloadManager downloadManager= (DownloadManager) getSystemService(DOWNLOAD_SERVICE);
                long id =  downloadManager.enqueue(request.setAllowedNetworkTypes(DownloadManager.Request.NETWORK_WIFI |DownloadManager.Request.NETWORK_MOBILE)
                        .setAllowedOverRoaming(false)
                        .setTitle("File Downloading...")
                        .setDescription("Image File Download")
                        .setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, "theme3.png"));
                Toast.makeText(Activity2.this,
                        "Downloading image...",
                        Toast.LENGTH_SHORT)
                        .show();

            }
        });

        button4.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v)
            {
                //downloding the image from the internet
                Uri downloadUri = Uri.parse("https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRaOsNbDo_z7aMiWKZgNh_U4Hjj0w-eXXC2P1nBInNIxv1zgQPD");
                DownloadManager.Request request = new DownloadManager.Request(downloadUri);
                request.setDescription("Downloading a file");
                DownloadManager downloadManager= (DownloadManager) getSystemService(DOWNLOAD_SERVICE);
                long id =  downloadManager.enqueue(request.setAllowedNetworkTypes(DownloadManager.Request.NETWORK_WIFI |DownloadManager.Request.NETWORK_MOBILE)
                        .setAllowedOverRoaming(false)
                        .setTitle("File Downloading...")
                        .setDescription("Image File Download")
                        .setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, "theme4.png"));

                Toast.makeText(Activity2.this,
                        "Downloading image...",
                        Toast.LENGTH_SHORT)
                        .show();

            }
        });
    }

    public ArrayList<File> getfile(File dir) {
        File listFile[] = dir.listFiles();
        if (listFile != null && listFile.length > 0) {
            for (int i = 0; i < listFile.length; i++) {

                if (listFile[i].isDirectory()) {
                    fileList.add(listFile[i]);
                    getfile(listFile[i]);

                } else {
                    if (listFile[i].getName().endsWith(".png")
                            || listFile[i].getName().endsWith(".jpg")
                            || listFile[i].getName().endsWith(".jpeg")
                            || listFile[i].getName().endsWith(".gif"))

                    {
                        fileList.add(listFile[i]);
                    }
                }

            }
        }
        return fileList;
    }

    private void saveImage(Bitmap mutableBitmap,File root) {
        String fname = "IMG-20191130-WA0101.jpg";
        File file = new File(root, fname);
        //if (file.exists()) file.delete ();
        try {
            FileOutputStream out = new FileOutputStream(file);
            mutableBitmap.compress(Bitmap.CompressFormat.JPEG, 100, out);
            out.flush();
            out.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void downloadImage(Bitmap mutableBitmap,File root) {
        String fname = "IMG-20191130-WA0112.jpg";
        File file = new File(root, fname);
        //if (file.exists()) file.delete ();
        try {
            FileOutputStream download = new FileOutputStream(file);
            mutableBitmap.compress(Bitmap.CompressFormat.JPEG, 100, download);
            download.flush();
            download.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}